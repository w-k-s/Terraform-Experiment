name: "8. Serverless Architecture - Deploy"
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      LAMBDA_BUCKET: ${{ vars.SERVERLESS_PROJECT_BUCKET }}
      LAMBDA_KEY: ${{ vars.SERVERLESS_PROJECT_KEY }}
    defaults:
      run:
        working-directory: ./8-ServerlessArchitecture
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: ./8-ServerlessArchitecture/backend
        run: npm install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./8-ServerlessArchitecture/terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./8-ServerlessArchitecture/terraform
        run: terraform validate

      - name: Terraform Apply
        working-directory: ./8-ServerlessArchitecture/terraform
        run: terraform apply -auto-approve -var="aws_region=$AWS_DEFAULT_REGION" -var="lambda_s3_bucket=$LAMBDA_BUCKET" -var="lambda_s3_key=$LAMBDA_KEY"

      - name: Get API Endpoint
        id: tf_output
        working-directory: ./8-ServerlessArchitecture/terraform
        run: |
          API_URL=$(terraform output -raw api_endpoint)
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT

      - name: Publish GitHub Summary
        run: |
          echo "### ðŸš€ Todo API Deployed Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Base URL:** [${{ steps.tf_output.outputs.api_url }}](${{ steps.tf_output.outputs.api_url }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Available Endpoints:**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`http" >> $GITHUB_STEP_SUMMARY
          echo "POST   /todo         â†’ Create a new todo" >> $GITHUB_STEP_SUMMARY
          echo "GET    /todo         â†’ List all todos" >> $GITHUB_STEP_SUMMARY
          echo "PATCH  /todo/{id}    â†’ Update a todo by ID" >> $GITHUB_STEP_SUMMARY
          echo "DELETE /todo/{id}    â†’ Delete a todo by ID" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
